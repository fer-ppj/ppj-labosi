KR_VOID 4 void
IDN 4 fun
L_ZAGRADA 4 (
KR_INT 4 int
IDN 4 xYz
D_ZAGRADA 4 )
L_VIT_ZAGRADA 4 {
KR_RETURN 5 return
TOCKAZAREZ 5 ;
D_VIT_ZAGRADA 6 }
KR_INT 9 int
IDN 9 main
L_ZAGRADA 9 (
KR_VOID 9 void
D_ZAGRADA 9 )
L_VIT_ZAGRADA 9 {
KR_INT 10 int
IDN 10 A
L_UGL_ZAGRADA 10 [
BROJ 10 512
D_UGL_ZAGRADA 10 ]
TOCKAZAREZ 10 ;
KR_INT 11 int
IDN 11 t
L_UGL_ZAGRADA 11 [
D_UGL_ZAGRADA 11 ]
OP_PRIDRUZI 11 =
L_VIT_ZAGRADA 11 {
BROJ 11 1
ZAREZ 11 ,
BROJ 11 2
ZAREZ 11 ,
BROJ 11 3
D_VIT_ZAGRADA 11 }
TOCKAZAREZ 11 ;
KR_CHAR 12 char
IDN 12 tmp
L_UGL_ZAGRADA 12 [
D_UGL_ZAGRADA 12 ]
OP_PRIDRUZI 12 =
NIZ_ZNAKOVA 12 "te\nst"
TOCKAZAREZ 12 ;
KR_CONST 13 const
KR_CHAR 13 char
IDN 13 x
L_UGL_ZAGRADA 13 [
D_UGL_ZAGRADA 13 ]
OP_PRIDRUZI 13 =
NIZ_ZNAKOVA 13 "\"tes\"t2\""
TOCKAZAREZ 13 ;
KR_INT 14 int
IDN 14 xYz
ZAREZ 14 ,
IDN 14 abc
TOCKAZAREZ 14 ;
KR_INT 15 int
IDN 15 i
TOCKAZAREZ 15 ;
IDN 17 xYz
OP_PRIDRUZI 17 =
BROJ 17 12345
TOCKAZAREZ 17 ;
IDN 18 abc
OP_PRIDRUZI 18 =
IDN 18 xYz
TOCKAZAREZ 18 ;
IDN 19 abc
OP_PRIDRUZI 19 =
L_ZAGRADA 19 (
IDN 19 xYz
D_ZAGRADA 19 )
TOCKAZAREZ 19 ;
IDN 20 abc
OP_PRIDRUZI 20 =
IDN 20 abc
OP_INC 20 ++
PLUS 20 +
IDN 20 xYz
TOCKAZAREZ 20 ;
IDN 21 abc
OP_PRIDRUZI 21 =
BROJ 21 054
OP_MOD 21 %
BROJ 21 5
TOCKAZAREZ 21 ;
IDN 22 abc
OP_PRIDRUZI 22 =
BROJ 22 0xaafff
TOCKAZAREZ 22 ;
IDN 23 i
OP_PRIDRUZI 23 =
BROJ 23 3
OP_PUTA 23 *
BROJ 23 2
PLUS 23 +
BROJ 23 5
MINUS 23 -
BROJ 23 3
OP_BIN_ILI 23 |
BROJ 23 3
OP_BIN_I 23 &
BROJ 23 3
OP_BIN_XILI 23 ^
BROJ 23 3
TOCKAZAREZ 23 ;
IDN 25 tmp
L_UGL_ZAGRADA 25 [
BROJ 25 1
D_UGL_ZAGRADA 25 ]
OP_PRIDRUZI 25 =
ZNAK 25 'b'
TOCKAZAREZ 25 ;
IDN 26 tmp
L_UGL_ZAGRADA 26 [
BROJ 26 2
D_UGL_ZAGRADA 26 ]
OP_PRIDRUZI 26 =
ZNAK 26 '\n'
TOCKAZAREZ 26 ;
IDN 27 tmp
L_UGL_ZAGRADA 27 [
BROJ 27 3
D_UGL_ZAGRADA 27 ]
OP_PRIDRUZI 27 =
TOCKAZAREZ 27 ;
IDN 28 tmp
L_UGL_ZAGRADA 28 [
BROJ 28 0
D_UGL_ZAGRADA 28 ]
OP_PRIDRUZI 28 =
ZNAK 28 '\''
TOCKAZAREZ 28 ;
KR_FOR 29 for
L_ZAGRADA 29 (
IDN 29 i
OP_PRIDRUZI 29 =
BROJ 29 0
TOCKAZAREZ 29 ;
IDN 29 i
OP_LT 29 <
BROJ 29 4
TOCKAZAREZ 29 ;
OP_INC 29 ++
IDN 29 i
D_ZAGRADA 29 )
L_VIT_ZAGRADA 29 {
IDN 30 tmp
L_UGL_ZAGRADA 30 [
IDN 30 i
D_UGL_ZAGRADA 30 ]
OP_PRIDRUZI 30 =
L_ZAGRADA 30 (
KR_CHAR 30 char
D_ZAGRADA 30 )
IDN 30 abc
TOCKAZAREZ 30 ;
KR_BREAK 33 break
TOCKAZAREZ 33 ;
KR_CONTINUE 34 continue
TOCKAZAREZ 34 ;
KR_RETURN 35 return
IDN 35 xYz
TOCKAZAREZ 35 ;
D_VIT_ZAGRADA 36 }
KR_IF 38 if
L_ZAGRADA 38 (
BROJ 38 1
OP_GTE 38 >=
BROJ 38 3
OP_I 38 &&
IDN 38 i
OP_GT 38 >
BROJ 38 2
OP_ILI 38 ||
IDN 38 i
OP_LTE 38 <=
BROJ 38 12
D_ZAGRADA 38 )
L_VIT_ZAGRADA 38 {
IDN 39 fun
L_ZAGRADA 39 (
BROJ 39 3
D_ZAGRADA 39 )
TOCKAZAREZ 39 ;
D_VIT_ZAGRADA 40 }
KR_ELSE 40 else
L_VIT_ZAGRADA 40 {
IDN 41 fun
L_ZAGRADA 41 (
BROJ 41 5
D_ZAGRADA 41 )
TOCKAZAREZ 41 ;
D_VIT_ZAGRADA 42 }
KR_WHILE 44 while
L_ZAGRADA 44 (
BROJ 44 1
D_ZAGRADA 44 )
L_VIT_ZAGRADA 44 {
KR_BREAK 45 break
TOCKAZAREZ 45 ;
D_VIT_ZAGRADA 46 }
KR_RETURN 48 return
BROJ 48 0
TOCKAZAREZ 48 ;
D_VIT_ZAGRADA 49 }
